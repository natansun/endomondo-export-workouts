1) run on content script the XHRs,
send them as message to background script,
put 10 files as a ZIP file,
download the zips from there / enable a button for a download

2) show in popup window the list of all workout names + ids (as date + workout id),
   for example: 2020-10-12_123456, id: 555.
let the user to choose whether to:
- Download all workouts
- Download the selected workouts

OR

In history page, add an option to select :
- each workout
- all page workouts (15 workouts)
- all workouts

and download them.

3) take user id from "var endoConfig" on homepage.
endoConfig.session.id
AND:
endoConfig.session is exist, if logged in,
so if not - asked to sign in,
and only if exists, start grabbing.

4) after hitting download:
- disable download button
- optional cancel button, if clicked - cancel download and download button is enabled again.
- after all downloads done, enable download button again.

5) ** try to download using chrome api:
https://stackoverflow.com/a/45530938

function downloadFile(options) {
    if(!options.url) {
        var blob = new Blob([ options.content ], {type : "text/plain;charset=UTF-8"});
        options.url = window.URL.createObjectURL(blob);
    }
    chrome.downloads.download({
        url: options.url,
        filename: options.filename
    })
}

// Download file with custom content
downloadFile({
  filename: "foo.txt",
  content: "bar"
});

// Download file from external host
downloadFile({
  filename: "foo.txt",
  url: "http://your.url/to/download"
});

6) Extension description -
Export and backup all your workouts at once.
Endomondo application lifespan is coming to an end at the end of 2020.
This extension will allow you to back up all your workouts as TCX/GPX files.

7) save with file name of :
start_time
change format of it:
start_time.split(".")[0].replace(/[-|:]/g,"").replace("T", "_")
"2020-11-18T14:46:05.000Z"    =>        20201118_144605

8) user id + user name from DOM:
var profileInfo1st = document.getElementsByClassName("header-member-profile-name")[0];
var userId, userName;

if(profileInfo1st){
    userId = profileInfo1st.href.split('/').pop();
    userName = profileInfo1st.innerText;
    console.log('found profile info method 1');
} else {
    profileInfo = $(".headerRightContent").find("a[href*='profile']")[0];
    userId = profileInfo.href.split('/').pop();
    userName = profileInfo.innerText;
    console.log('found profile info method 2');
}

console.log(userId);
console.log(userName);

9) every X seconds:
- content sends to background, and background saves:
-- user info
-- total workouts (only if there's user info - can be triggered after user info get)
- popup query only the background for user info + total workouts.

if no user info on content -> delete user info + total workouts on background.